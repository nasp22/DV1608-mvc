{% extends "base.html.twig" %}

{% block title %}Metrics{% endblock %}

{% block body %}
    <h2>Introduktion</h2>
    Codestyle
    Coverage
    Complexity
    Cohesion
    Coupling
    CRAP
    Börja med en rubrik “Introduktion” där du förklarar de sex C:na och hur de kan påverka kodens kvalitet.
    Exemplifiera, där det passar, med några mätvärden som är kopplad till din egen kod och ge en kort förklaring av mätvärdet
    relaterat till kodkvalitet.

    <h2>Phpmetrics</h2>
    Skapa en rubrik “Phpmetrics” och analysera dess rapport för din kod. Använd mätvärdena för att hitta flaskhalsar
    och svaga punkter i din kod (minst 3 stycken). Du vill hitta kod som har förbättringspotential.
    Visualisera med någon representativ bild från rapporten.
    <h2>Scrutinizer</h2>
        <div>
        <a href="https://scrutinizer-ci.com/g/nasp22/DV1608-mvc/">
            <img src="{{ asset('https://scrutinizer-ci.com/g/nasp22/DV1608-mvc/badges/quality-score.png?b=main') }}" alt="code intellegence">
        </a>
    </div>
    <div>
        <a href="https://scrutinizer-ci.com/g/nasp22/DV1608-mvc/">
            <img src="{{ asset('https://scrutinizer-ci.com/g/nasp22/DV1608-mvc/badges/code-intelligence.svg?b=main') }}" alt="code intellegence">
        </a>
        <a href="https://scrutinizer-ci.com/g/nasp22/DV1608-mvc/">
            <img src="{{ asset('https://scrutinizer-ci.com/g/nasp22/DV1608-mvc/badges/build.png?b=main') }}" alt="Build">
        </a>
        <a href="https://scrutinizer-ci.com/g/nasp22/DV1608-mvc/">
            <img src="{{ asset('https://scrutinizer-ci.com/g/nasp22/DV1608-mvc/badges/coverage.png?b=main') }}" alt="Build">
        </a>
    </div>
    Skapa en rubrik “Scrutinizer” och analysera dess rapport för din kod. Gör på samma sätt som du gjorde med Phpmetrics:
    Använd mätvärdena för att hitta flaskhalsar
    och svaga punkter i din kod (minst 3 stycken). Du vill hitta kod som har förbättringspotential.
    Visualisera med någon representativ bild från rapporten.
    Placera samma badges i din REAEME.md.
    I ovan analys så kopplar du dina “findings” till 6C. Använd gärna något ytterligare mättal som du finner relevant och intressant.
     <h2>Förbättringar</h2>
    Skapa en ny rubrik “Förbättringar” där du väljer minst 3 förbättringar som du vill göra med din kod (gärna fler).

    Exempel på förbättringar kan vara:
    Fixa issues
    Öka kodtäckning
    Fokusera på kvalitetsindex i Scrutinizer
    Minska komplexiteten i class/metod
    Börja med att skriva om förbättringarna, vad du tänker göra, varför du väljer dem och hur du tror det kommer påverka mätvärdena för kvalitet.
    <h2> Implemetering och Analys</h2>
    Implementera sedan förbättringarna.
    Analysera därefter rapporterna från phpmetrics och Scrutinizer och notera de nya mätvärdena.
    Gör det tydligt hur mätvärdena såg ut innan och efter dina förbättringar.

    <h2>Diskussion</h2>
    Avsluta med ett stycke “Diskussion” där du diskuterar kort kring det du nyss gjort.

    Kan man aktivt jobba med kodkvalitet och “clean code” på detta sättet?
    Finns det fördelar och kanske nackdelar?
    Ser du andra möjligheter att jobba mot “clean code”?
    </div>

    {% endblock %}